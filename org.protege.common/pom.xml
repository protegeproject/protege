<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>edu.stanford.protege</groupId>
		<artifactId>protege-parent</artifactId>
		<version>5.0.0-beta-18-SNAPSHOT</version>
		<relativePath>../</relativePath>
	</parent>

	<!-- groupId and version are inherited from the parent -->	
	<artifactId>org.protege.common</artifactId>
	<packaging>bundle</packaging>
	
	<name>Protege Common</name>
	<description>Core Protege Libraries</description>
	
	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>	

		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.main</artifactId>
		</dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
	</dependencies>

	<build>
		<plugins>
            <plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.4.0</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-Activator>org.protege.common.Activator</Bundle-Activator>
						<Bundle-ClassPath>.</Bundle-ClassPath>
						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Vendor>The Protege Development Team</Bundle-Vendor>
						<Embed-Dependency>log4j;inline=true</Embed-Dependency>
						<Export-Package>
							${project.artifactId}*;version=${project.version}, 
							org.apache.log4j.*
						</Export-Package>
						<Import-Package>
							com.ibm.uvm.*;resolution:=optional,
							com.sun.*;resolution:=optional,
							javax.jms.*;resolution:=optional,
							javax.mail.*;resolution:=optional,
							javax.jmdns.*;resolution:=optional,
							javax.swing.*;resolution:=optional,
							javax.management.*;resolution:=optional,
							javax.naming.*;resolution:=optional,
							*
						</Import-Package>
					</instructions>
				</configuration>
            </plugin>
            
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<pde>true</pde>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>ide</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<!-- Including this plug-in eliminates the "maven-dependency-plugin (goals "copy-dependencies", "unpack") is not supported by m2e" Eclipse error. -->
						<!-- See stackoverflow for full discussion: http://stackoverflow.com/q/8706017. -->
						<!-- This plugin's configuration is used to store Eclipse m2e settings only.  It has no influence on the Maven build itself. -->
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-dependency-plugin</artifactId>
												<versionRange>[2.1,)</versionRange>
												<goals>
													<goal>copy-dependencies</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore />
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
				
				<plugins>
					<!-- Copy all Maven dependencies to project root.  Necessary for one mode of running Protege in Eclipse (PDE + m2e + OSGi Framework launcher). -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.8</version>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>process-sources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>false</overWriteSnapshots>
									<overWriteIfNewer>true</overWriteIfNewer>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<version>2.5</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>${basedir}</directory>
									<includes>
										<include>*.jar</include>
									</includes>
									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
